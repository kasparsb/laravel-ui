@import '../../../node_modules/calendar/less/calendar.less';
@import 'variables';
@import 'resets';
@import 'input-text';
@import 'fields';
@import 'gaps';
@import 'width';
@import 'max-width';
@import 'height';
@import 'text-size';
@import 'padding';
@import 'margin-top';
@import 'margin-bottom';
@import 'margin-y';
@import 'background-colors';
@import 'border-colors';
@import 'colors';

[type=button], [type=reset], [type=submit], button {
    -webkit-appearance: button;
    background-color: transparent;
    background-image: none;
}

// Variables
*,:after,:before {
    --input: 240 5.9% 90%;
    --radius: 0.5rem;
    --font-family-sans: ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
    --font-weight-regular: 400;
    --font-weight-medium: 500;
    --font-weight-bold: 600;


    --muted-foreground: 240 3.8% 46.1%;
    --color-danger: 0 72% 51%;
    --color-background: 0 0% 100%;


    box-sizing: border-box;
    border: 0 solid #e5e7eb;
}

.color-zinc {
    // Color Zinc no tailwind
    // tīri hsl definīcija bez hsl. Lai var izmantot var iekš hsl un papildus norādīt opacity
    --color-50: 0 0% 98%;
    --color-100: 240 5% 96%;
    --color-200: 240 6% 90%;
    --color-300: 240 5% 84%;
    --color-400: 240 5% 65%;
    --color-500: 240 4% 46%;
    --color-600: 240 5% 34%;
    --color-700: 240 5% 26%;
    --color-800: 240 4% 16%;
    --color-900: 240 6% 10%;
    --color-950: 240 10% 4%;


    // šie ir lai varētu vieglāk preview krāsu uzreiz saprast
    --color-50-hsl: hsl(0 0% 98%);
    --color-100-hsl: hsl(240 5% 96%);
    --color-200-hsl: hsl(240 6% 90%);
    --color-300-hsl: hsl(240 5% 84%);
    --color-400-hsl: hsl(240 5% 65%);
    --color-500-hsl: hsl(240 4% 46%);
    --color-600-hsl: hsl(240 5% 34%);
    --color-700-hsl: hsl(240 5% 26%);
    --color-800-hsl: hsl(240 4% 16%);
    --color-900-hsl: hsl(240 6% 10%);
    --color-950-hsl: hsl(240 10% 4%);
    --color-danger-hsl: hsl(0 72% 51%);
    --color-background-hsl: hsl(0 0% 100%);

    //color: hsl(240 5.9% 10%);
}

// Aditional colors as variable
body {
    --color-green-50: 138 76% 97%;
    --color-green-100: 141 84% 93%;
    --color-green-200: 141 79% 85%;
    --color-green-300: 142 77% 73%;
    --color-green-400: 142 69% 58%;
    --color-green-500: 142 71% 45%;
    --color-green-600: 142 76% 36%;
    --color-green-700: 142 72% 29%;
    --color-green-800: 143 64% 24%;
    --color-green-900: 144 61% 20%;
    --color-green-950: 145 80% 10%;

    --color-green-50-hsl: hsl(138 76% 97%);
    --color-green-100-hsl: hsl(141 84% 93%);
    --color-green-200-hsl: hsl(141 79% 85%);
    --color-green-300-hsl: hsl(142 77% 73%);
    --color-green-400-hsl: hsl(142 69% 58%);
    --color-green-500-hsl: hsl(142 71% 45%);
    --color-green-600-hsl: hsl(142 76% 36%);
    --color-green-700-hsl: hsl(142 72% 29%);
    --color-green-800-hsl: hsl(143 64% 24%);
    --color-green-900-hsl: hsl(144 61% 20%);
    --color-green-950-hsl: hsl(145 80% 10%);


    --color-red-50: 0 86% 97%;
    --color-red-100: 0 93% 94%;
    --color-red-200: 0 96% 89%;
    --color-red-300: 0 94% 82%;
    --color-red-400: 0 91% 71%;
    --color-red-500: 0 84% 60%;
    --color-red-600: 0 72% 51%;
    --color-red-700: 0 74% 42%;
    --color-red-800: 0 70% 35%;
    --color-red-900: 0 63% 31%;
    --color-red-950: 0 75% 15%;

    --color-red-50-hsl: hsl(0 86% 97%);
    --color-red-100-hsl: hsl(0 93% 94%);
    --color-red-200-hsl: hsl(0 96% 89%);
    --color-red-300-hsl: hsl(0 94% 82%);
    --color-red-400-hsl: hsl(0 91% 71%);
    --color-red-500-hsl: hsl(0 84% 60%);
    --color-red-600-hsl: hsl(0 72% 51%);
    --color-red-700-hsl: hsl(0 74% 42%);
    --color-red-800-hsl: hsl(0 70% 35%);
    --color-red-900-hsl: hsl(0 63% 31%);
    --color-red-950-hsl: hsl(0 75% 15%);

    --color-blue-50: 214 100% 97%;
    --color-blue-100: 214 95% 93%;
    --color-blue-200: 213 97% 87%;
    --color-blue-300: 212 96% 78%;
    --color-blue-400: 213 94% 68%;
    --color-blue-500: 217 91% 60%;
    --color-blue-600: 221 83% 53%;
    --color-blue-700: 224 76% 48%;
    --color-blue-800: 226 71% 40%;
    --color-blue-900: 224 64% 33%;
    --color-blue-950: 226 57% 21%;

    --color-blue-50-hsl: hsl(214 100% 97%);
    --color-blue-100-hsl: hsl(214 95% 93%);
    --color-blue-200-hsl: hsl(213 97% 87%);
    --color-blue-300-hsl: hsl(212 96% 78%);
    --color-blue-400-hsl: hsl(213 94% 68%);
    --color-blue-500-hsl: hsl(217 91% 60%);
    --color-blue-600-hsl: hsl(221 83% 53%);
    --color-blue-700-hsl: hsl(224 76% 48%);
    --color-blue-800-hsl: hsl(226 71% 40%);
    --color-blue-900-hsl: hsl(224 64% 33%);
    --color-blue-950-hsl: hsl(226 57% 21%);

    --color-yellow-50: 55, 92%, 95%;
    --color-yellow-100: 55, 97%, 88%;
    --color-yellow-200: 53, 98%, 77%;
    --color-yellow-300: 50, 98%, 64%;
    --color-yellow-400: 48, 96%, 53%;
    --color-yellow-500: 45, 93%, 47%;
    --color-yellow-600: 41, 96%, 40%;
    --color-yellow-700: 35, 92%, 33%;
    --color-yellow-800: 32, 81%, 29%;
    --color-yellow-900: 28, 73%, 26%;
    --color-yellow-950: 26, 83%, 14%;

    --color-yellow-50-hsl: hsl(55, 92%, 95%);
    --color-yellow-100-hsl: hsl(55, 97%, 88%);
    --color-yellow-200-hsl: hsl(53, 98%, 77%);
    --color-yellow-300-hsl: hsl(50, 98%, 64%);
    --color-yellow-400-hsl: hsl(48, 96%, 53%);
    --color-yellow-500-hsl: hsl(45, 93%, 47%);
    --color-yellow-600-hsl: hsl(41, 96%, 40%);
    --color-yellow-700-hsl: hsl(35, 92%, 33%);
    --color-yellow-800-hsl: hsl(32, 81%, 29%);
    --color-yellow-900-hsl: hsl(28, 73%, 26%);
    --color-yellow-950-hsl: hsl(26, 83%, 14%);

    --color-muted: var(--color-500);
    --color-error: var(--color-red-500);
    --color-error-muted: var(--color-red-400);
}

body {
    .color-zinc();
    .font-inter();

    min-height: 100dvh;
    color: var(--color-950);

    --desktop-width: @desktopWidth;
    --layout-aside-width: 200px;


    --size-005: @size005;
    --size-010: @size010;
    --size-015: @size015;
    --size-020: @size020;
    --size-025: @size025;
    --size-030: @size030;
    --size-035: @size035;
    --size-040: @size040;
    --size-050: @size050;
    --size-060: @size060;
    --size-070: @size070;
    --size-080: @size080;
    --size-090: @size090;
    --size-100: @size100;
    --size-110: @size110;
    --size-120: @size120;
    --size-140: @size140;
    --size-160: @size160;
    --size-200: @size200;
    --size-240: @size240;
    --size-280: @size280;
    --size-320: @size320;
    --size-360: @size360;
    --size-400: @size400;
    --size-440: @size440;
    --size-480: @size480;
    --size-520: @size520;
    --size-560: @size560;
    --size-600: @size600;
    --size-640: @size640;
    --size-720: @size720;
    --size-800: @size800;
    --size-960: @size960;
    --size-1112: @size1112;
    --size-1128: @size1128;
    --size-1144: @size1144;
    --size-1160: @size1160;
}

.font-sans {
    font-family: var(--font-family-sans);
}

.font-inter {
    font-family: Inter,ui-sans-serif,system-ui,sans-serif;
}

.remove-tap-highlite {
    -webkit-tap-highlight-color:  rgba(255, 255, 255, 0);
}

.fw-b {
    font-weight: var(--font-weight-bold);
}
.fw-m {
    font-weight: var(--font-weight-medium);
}
.fw-r {
    font-weight: var(--font-weight-regular);
}

.ta-left {
    text-align: left;
}
.ta-right {
    text-align: right;
}
.ta-center {
    text-align: center;
}

/**
 * Button or link disabled base state
 */
.button-link-disabled-base-state {
    /**
     * neizmantoju &:enabled un &:disabled, jo tas nedarbojas uz linkiem
     */
    &[disabled] {
        cursor: default;
    }

    // For link special case to disable it
    &:is(a[disabled]) {
        pointer-events: none;
    }

    &[disabled] {
        opacity: .6;
    }
}

.badge {
    display: inline-flex;
    flex-flow: row nowrap;
    justify-content: center;
    align-items: center;
    gap: @size010;

    .t-3();

    padding-top: @size005;
    padding-bottom: @size005;
    padding-left: @size025;
    padding-right: @size025;

    .border-md();

    svg {
        width: @size030;
        height: @size030;
        //stroke-width: 2px;
    }

    background-color: hsl(var(--color-100));
    color: hsl(var(--color-600));
    font-weight: var(--font-weight-medium);
}

.transition-color {
    transition-property: opacity color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(.4,0,.2,1);
    transition-duration: .15s;
}
.shadow {
    box-shadow:
        0 0 #0000,
        0 0 #0000,
        0 1px 2px 0 rgba(0,0,0,.05);
}
.shadow-md {
    box-shadow:
        0 0 #0000,
        0 0 #0000,
        0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);
}
.shadow-lg {
    box-shadow:
        0 0 #0000,
        0 0 #0000,
        0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0,.1);
}

.border-lg {
    border-radius: var(--radius);
}
.border-md {
    border-radius: calc(var(--radius) - 2px);
}
.border-sm {
    border-radius: calc(var(--radius) - 4px);
}

.input-label {
    .t-3\.5();
    .fw-m();
    line-height: 1;
}
.input-label-error {
    .t-3\.5();
    .fw-m();
    line-height: 1;
    color: hsl(var(--color-error));
}

.button-base {
    .remove-tap-highlite();

    display: inline-flex;
    flex-flow: row nowrap;
    align-items: center;
    justify-content: center;
    white-space: nowrap;

    &.ta-left {
        justify-content: flex-start;
    }
    &.ta-right {
        justify-content: flex-end;
    }

    // Colors
    &.color-blue-950 { color: hsl(var(--color-blue-950)) }
    &.color-blue-900 { color: hsl(var(--color-blue-900)) }
    &.color-blue-800 { color: hsl(var(--color-blue-800)) }
    &.color-blue-700 { color: hsl(var(--color-blue-700)) }
    &.color-blue-600 { color: hsl(var(--color-blue-600)) }
    &.color-blue-500 { color: hsl(var(--color-blue-500)) }
    &.color-blue-400 { color: hsl(var(--color-blue-400)) }
    &.color-blue-300 { color: hsl(var(--color-blue-300)) }
    &.color-blue-200 { color: hsl(var(--color-blue-200)) }
    &.color-blue-100 { color: hsl(var(--color-blue-100)) }
    &.color-blue-50  { color: hsl(var(--color-blue-50)) }

    &.color-red-950 { color: hsl(var(--color-red-950)) }
    &.color-red-900 { color: hsl(var(--color-red-900)) }
    &.color-red-800 { color: hsl(var(--color-red-800)) }
    &.color-red-700 { color: hsl(var(--color-red-700)) }
    &.color-red-600 { color: hsl(var(--color-red-600)) }
    &.color-red-500 { color: hsl(var(--color-red-500)) }
    &.color-red-400 { color: hsl(var(--color-red-400)) }
    &.color-red-300 { color: hsl(var(--color-red-300)) }
    &.color-red-200 { color: hsl(var(--color-red-200)) }
    &.color-red-100 { color: hsl(var(--color-red-100)) }
    &.color-red-50  { color: hsl(var(--color-red-50)) }

    &.color-green-950 { color: hsl(var(--color-green-950)) }
    &.color-green-900 { color: hsl(var(--color-green-900)) }
    &.color-green-800 { color: hsl(var(--color-green-800)) }
    &.color-green-700 { color: hsl(var(--color-green-700)) }
    &.color-green-600 { color: hsl(var(--color-green-600)) }
    &.color-green-500 { color: hsl(var(--color-green-500)) }
    &.color-green-400 { color: hsl(var(--color-green-400)) }
    &.color-green-300 { color: hsl(var(--color-green-300)) }
    &.color-green-200 { color: hsl(var(--color-green-200)) }
    &.color-green-100 { color: hsl(var(--color-green-100)) }
    &.color-green-50  { color: hsl(var(--color-green-50)) }

    &.color-yellow-950 { color: hsl(var(--color-yellow-950)) }
    &.color-yellow-900 { color: hsl(var(--color-yellow-900)) }
    &.color-yellow-800 { color: hsl(var(--color-yellow-800)) }
    &.color-yellow-700 { color: hsl(var(--color-yellow-700)) }
    &.color-yellow-600 { color: hsl(var(--color-yellow-600)) }
    &.color-yellow-500 { color: hsl(var(--color-yellow-500)) }
    &.color-yellow-400 { color: hsl(var(--color-yellow-400)) }
    &.color-yellow-300 { color: hsl(var(--color-yellow-300)) }
    &.color-yellow-200 { color: hsl(var(--color-yellow-200)) }
    &.color-yellow-100 { color: hsl(var(--color-yellow-100)) }
    &.color-yellow-50  { color: hsl(var(--color-yellow-50)) }

    .t-3\.5();
    .fw-m();
    .border-md();
    .transition-color();
    cursor: pointer;

    height: @size090;
    padding-left: @size040;
    padding-right: @size040;
    padding-top: @size020;
    padding-bottom: @size020;

    // Tikai ikona, bez label
    &.icon {
        padding-left: @size020;
        padding-right: @size020;
    }
    &.compact {
        padding-left: @size020;
        padding-right: @size020;
    }
    &.small {
        .t-3();
        height: @size070;
        padding-top: 0;
        padding-bottom: 0;
        padding-left: @size020;
        padding-right: @size020;
    }

    &:is(a) {
        text-decoration: none;
    }

    .button-link-disabled-base-state();

    svg.spinner {
        display: none;

        @keyframes spin {
            100% {
                transform: rotate(360deg)
            }
        }
        animation: spin .75s infinite linear;
    }
    svg {
        margin-right: @size015;
        width: @size040;
        height: @size040;
    }

    &.icon-filled {
        svg {
            fill: currentColor;
        }
    }

    // Liela ikona, teksts jaunā rindā
    &.icon-large {
        .t-3();
        .fw-m();

        padding-top: @size010;
        padding-bottom: @size010;

        height: @size160;
        flex-flow: column nowrap;
        svg {
            margin-right: 0;
            margin-bottom: @size010;
            width: @size080;
            height: @size080;
        }
    }

    &.icon {
        svg {
            margin-right: 0;
        }
    }
    &.icon.icon-large {
        svg {
            margin-bottom: 0;
        }
    }

    // Loading state
    &:is([data-loading="loading"]) {
        svg {
            display: none;
            &.spinner {
                display: block;
            }
        }

    }
}

.button-primary {
    .button-base();
    .shadow();

    color: hsl(var(--color-100));
    background-color: hsl(var(--color-950));
    &:not([disabled]):hover {
        background-color: hsl(var(--color-950) / .9);
    }
}
.button-secondary {
    .button-base();
    .shadow();
    color: hsl(var(--color-900));
    background-color: hsl(var(--color-100));
    &:not([disabled]):hover {
        background-color: hsl(var(--color-100) / .8);
    }
}
.button-danger {
    .button-base();
    .shadow();
    color: hsl(var(--color-100));
    background-color: hsl(var(--color-danger));
    &:not([disabled]):hover {
        background-color: hsl(var(--color-danger) / .9);
    }
}
.button-outline {
    .button-base();
    color: var(--color-950);
    background-color: hsl(var(--color-background));
    border: 1px solid hsl(var(--input));
    &:not([disabled]):hover {
        background-color: hsl(var(--color-100));
    }
}
.button-ghost {
    .button-base();
    color: var(--color-950);
    //background-color: hsl(var(--color-background));
    background-color: transparent;
    &:not([disabled]):hover {
        background-color: hsl(var(--color-100));
        .shadow();
    }
}
.button-link {
    .button-base();
    color: var(--color-950);
    background-color: transparent;
    text-underline-offset: 4px;
    &:not([disabled]):hover {
        text-decoration-line: underline;
    }
}

.delimiter-vertical {
    color: hsl(var(--color-300));
    width: 2px;
    height: 16px;
    vertical-align: middle;
    margin-right: 2px;
}
.delimiter-horizontal {
    height: 1px;
    border-top: 1px solid hsl(var(--color-100));
    overflow: hidden;
    margin-top: @size010;
    margin-bottom: @size010;
}


.form-field {
    &:not(:is([data-state="error"])) {
        >div {
            .input-text-border();
            .input-text-border-color-shadow();
            .input-text-focus();
            &:has(input:focus),
            &:has(textarea:focus) {
                .input-text-focused();
            }
            input,
            textarea {
                .input-text();
            }
        }
    }
    &.no-border:not(:is([data-state="error"])) {
        >div {
            border-color: transparent;
            &:has(input:focus),
            &:has(textarea:focus) {
                border-color: transparent;
            }
        }
    }
    &[data-state="error"] {
        >div {
            .input-text-border();
            .input-text-error-border-color-shadow();
            .input-text-error-focus();
            &:has(input:focus),
            &:has(textarea:focus) {
                .input-text-error-focused();
            }
            input,
            textarea {
                .input-text-error();
            }
        }
    }
    &.no-border[data-state="error"] {
        >div {
            border-color: transparent;
            &:has(input:focus),
            &:has(textarea:focus) {
                border-color: transparent;
            }
        }
    }

    // wrapper div for input and prefix and sufix
    >div {
        overflow: hidden;

        display: flex;
        flex-flow: row nowrap;
        align-items: center;

        //gap: @size030;




        width: 100%;

        >input,
        >textarea {
            flex: 1;
            width: 100%;
        }
        >textarea {
            min-height: @size200;
        }

        svg {
            pointer-events: none;
            width: @size040;
            height: @size040;
            color: hsl(var(--color-muted));
            &[data-defautl-calendar-icon] {
                color: hsl(var(--color-800));
            }
        }
    }
    &.has-prefix {
        >div {
            padding-left: @size030;
        }
    }
    &.has-sufix {
        >div {
            padding-right: @size030;
        }
    }

    .form-field-label();
    .form-field-layout();
    .form-field-description-error()
}

.field-increment {
    >div {
        // novācam default form-field side padding
        padding-left: 0;
        padding-right: 0;

        // input lauks
        >input {
            text-align: center;
        }

        // pogām right un left borders
        button {
            &:first-child {
                border-right: 1px solid hsl(var(--color-200));
                border-top-right-radius: 0;
                border-bottom-right-radius: 0;
            }
            &:last-child {
                border-left: 1px solid hsl(var(--color-200));
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
            }
        }
    }
}

.field-hours-minutes {
    .form-field-label();
    .form-field-layout();
    .form-field-description-error()
}

.field-date-time {
    .form-field-label();
    .form-field-layout();
    .form-field-description-error()
}

.field-date-time {
    >div {
        display: flex;
        flex-flow: row nowrap;

        gap: @size020;
        .gaps-sizes();
    }
}

.field-select {
    >div {

        position: relative;

        input {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0;
            cursor: default;
            // atstājam pointer event, lai nostrādā default dropdown menu eventi
            //pointer-events: none;
        }

        [data-field-select-placeholder] {
            flex: 1;
            display: flex;
            justify-content: flex-start;
            align-items: center;
            white-space: nowrap;
            overflow: hidden;

            width: 100%;

            .input-text();
        }
    }

    // Vērtība nav norādīta. Šo kontrolē js
    &[data-is-empty] {
        [data-field-select-placeholder] {
            color: hsl(var(--color-400))
        }
    }
}

/**
 * Flexbox
 * main axis: justify-content
 * cross axis: align-items
 */


.col-items {
    display: flex;
    flex-flow: column nowrap;
    justify-content: flex-start;
    //align-items: flex-start;
    align-items: stretch;

    gap: @size040;
    .gaps-sizes();



    &.v-space-between {
        justify-content: space-between;
    }
    &.v-space-around {
        justify-content: space-around;
    }
    &.v-space-evenly {
        justify-content: space-evenly;
    }
    &.v-center {
        justify-content: center;
    }
    &.v-top {
        justify-content: flex-start;
    }
    &.v-bottom {
        justify-content: flex-end;
    }
    // Custom case, lai childs izplešas vienādi pa visu platumu
    &.v-stretch {
        >* {
            flex: 1;
        }
    }

    &.h-center {
        align-items: center;
    }
    &.h-stretch {
        align-items: stretch;
    }
    &.h-left {
        align-items: flex-start;
    }
    &.h-right {
        align-items: flex-end;
    }


    // Direct child, var pats sevi nopozicionēt uz cross axis
    >.h-center {
        align-self: center;
    }
    >.h-left {
        align-self: flex-start;
    }
    >.h-right {
        align-self: flex-end;
    }
    // Custom case, lai childs izplešas vienādi pa visu augstumu
    &.v-stretch {
        >* {
            flex: 1;
        }
    }


    &.condensed {

        gap: 0;
        .shadow();

        // Cards saspiežam ar bottom malām kopā
        >.card {
            box-shadow: none;
            border-radius: 0;
            border-top: 0;
            &:first-child {
                border-top-left-radius: var(--radius);
                border-top-right-radius: var(--radius);
                border-top: 1px solid #e5e7eb;
            }
            &:last-child {
                border-bottom-left-radius: var(--radius);
                border-bottom-right-radius: var(--radius);
            }
        }
    }

    // Child, lai aizņem visu pieejamo brīvo vietu
    .flex-1 {
        flex: 1;
    }
}


.row-items {
    display: flex;
    flex-flow: row wrap;
    justify-content: flex-start;
    align-items: center;

    gap: @size020;
    .gaps-sizes();

    &.v-center {
        align-items: center;
    }
    &.v-stretch {
        align-items: stretch;
    }
    &.v-top {
        align-items: flex-start;
    }
    &.v-bottom {
        align-items: flex-end;
    }

    &.h-space-between {
        justify-content: space-between;
    }
    &.h-space-around {
        justify-content: space-around;
    }
    &.h-space-evenly {
        justify-content: space-evenly;
    }
    &.h-center {
        justify-content: center;
    }
    &.h-right {
        justify-content: flex-end;
    }
    &.h-left {
        justify-content: flex-start;
    }
    // Custom case, lai childs izplešas vienādi pa visu platumu
    &.h-stretch {
        >* {
            flex: 1;
        }
    }

    // Direct child, var pats sevi nopozicionēt uz cross axis
    >.v-center {
        align-self: center;
    }
    >.v-top {
        align-self: flex-start;
    }
    >.v-bottom {
        align-self: flex-end;
    }
    // child aizņem visu pieejamo vietu
    >.h-stretch {
        flex: 1;
    }

    &.condensed {
        gap: 0;

        >.button-primary,
        >.button-secondary,
        >.button-danger,
        >.button-ghost,
        >.button-outline,
        >.form-field {
            border-radius: 0;
            &:first-child {
                border-top-left-radius: var(--radius);
                border-bottom-left-radius: var(--radius);
            }
            &:last-child {
                border-top-right-radius: var(--radius);
                border-bottom-right-radius: var(--radius);
            }
        }
        >.form-field {
            input {
                border-radius: 0;
                border-left: 0;
            }
            &:first-child {
                input {
                    border-top-left-radius: var(--radius);
                    border-bottom-left-radius: var(--radius);
                    border-left: 1px solid #e5e7eb;
                }
            }
            &:last-child {
                input {
                    border-top-right-radius: var(--radius);
                    border-bottom-right-radius: var(--radius);
                }
            }
        }
        >.button-outline {
            border-left: 0;
            &:first-child {
                border-top-left-radius: var(--radius);
                border-bottom-left-radius: var(--radius);
                border-left: 1px solid #e5e7eb;
            }
            &:last-child {
                border-top-right-radius: var(--radius);
                border-bottom-right-radius: var(--radius);
            }
        }
    }

    // Child, lai aizņem visu pieejamo brīvo vietu
    .flex-1 {
        flex: 1;
    }
}

.title {
    .fw-b();

    line-height: 1;

    &.t-3\.5 {
        letter-spacing: -.025em;
    }

    // tikai uz direct svg. Ja vienkārši visiem svg, tad pogām sačakarējas svg novietojums un izmērs
    >svg {
        position: relative;
        top: .125em;
        height: 1em;
        width: 1em;
        margin-left: -.125em;
        margin-right: -.125em;
    }
}

.title-description {
    .t-3\.5();
    color: hsl(var(--color-muted));

    margin-top: @size015;

    display: flex;
    align-items: center;

    gap: @size010;
}

.text {
    &.t-3\.5 {
        letter-spacing: -.025em;
    }

    svg {
        position: relative;
        top: .125em;
        height: 1em;
        width: 1em;
        margin-left: -.125em;
        margin-right: -.125em;
    }
}

.card {
    .border-lg();
    border-width: 1px;
    border-style: solid;

    // krāsu uzliks ar css klasēm b-c-200, lai to var override
    //border-color: hsl(var(--color-200));

    padding: @size060;

    .shadow();

    &.has-bg {
        background-color: hsl(var(--color-background));
    }

    text-align: left;

    &.compact {
        padding: @size040;
    }
    &.hover {
        cursor: pointer;
        .transition-color();
        &:hover {
            background-color: hsl(var(--color-100));
        }
    }

    // Kā overlay. Priekš date picker
    // TODO varbūt šitā nevajag. Paša datepicker container nostilot kā card
    // TODO nav īsti saprotams, kurā mirklī card ir is-overlay
    &.is-overlay {
        .has-bg();
        .shadow-md();
        padding: @size020;
    }

    > * {
        margin-top: @size060;
        &:first-child {
            margin-top: 0;
        }
    }
    &.compact {
        > * {
            margin-top: @size040;
            &:first-child {
                margin-top: 0;
            }
        }
    }
}

.empty-state {

    &:not(:is(.no-border)) {
        .border-lg();

        .shadow();

        border-width: 1px;
        border-style: solid;
        border-color: hsl(var(--color-200));
        padding: @size120 @size060;
    }

    display: flex;
    flex-flow: column;
    justify-content: center;
    align-items: center;

    >.top {
        >svg {
            color: hsl(var(--color-300));
            width: 5rem;
            height: 5rem;
        }
        .mb-6();
    }

    >.bottom {
        .mt-6();
    }
}

.toggle-switch {
    // Grid nevar izmanto, jo tad label izstiepjas pa visu platumu
    // checkbox vēlams, lai label ir teksta platumā
    // un lai nenostrādā click ārpus label teksta
    display: flex;
    flex-flow: column nowrap;
    justify-content: flex-start;
    align-items: flex-start;
    gap: @size020;

    label {
        .remove-tap-highlite();
        display: flex;
        flex-flow: row nowrap;
        align-items: center;

        gap: @size020;

        cursor: pointer;

        /* The rule below is not implemented in browsers yet */
        -o-user-select: none;
        /* The rule below is implemented in most browsers by now */
        user-select: none;
    }

    // Label
    &:not(:is([data-state="error"])) {
        span:not(:has(input)) {
            .input-label()
        }
    }
    &[data-state="error"] {
        span {
            .input-label-error();
        }
    }

    // Switch
    span:has(input) {
        position: relative;

        display: inline-flex;
        align-items: center;
        border-radius: 9999px;

        width: @size110;
        height: @size060;

        .transition-color();

        &:after {
            content: '';
            display: block;

            width: @size050;
            height: @size050;

            background-color: hsl(var(--color-50));
            border-radius: 9999px;

            pointer-events: none;

            transition-property: transform;
            transition-timing-function: cubic-bezier(.4,0,.2,1);
            transition-duration: .15s;

            box-shadow: 0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);
        }

        &:has([type=checkbox]:checked) {
            background-color: hsl(var(--color-900));
            border-color: hsl(var(--color-900));
        }
        &:has([type=checkbox]:checked):after {
            transform: translate(@size050, 0);
        }

        input {
            opacity: 0;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;

            cursor: inherit;
        }

        border: 2px solid hsl(var(--color-200));
        background-color: hsl(var(--color-200));

        // focus outline
        outline: 2px solid transparent;
        outline-offset: 2px;
    }
    // focus outline. Tikai kad ar keyboard fokusē. Ja ar peli, tad nav
    span:has(input:focus-visible) {
        outline-color: hsl(var(--color-400));
    }

    // Description and error text
    .form-field-description-error()
}

.field-toggle-switch {
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-between;
    align-items: center;

    padding: @size040 @size030;
    gap: @size040;

    .shadow();

    .border-lg();
    border-width: 1px;
    border-style: solid;

    &:not(:is([data-state="error"])) {
        border-color: hsl(var(--color-200));
        h4 {
            .input-label();
        }
    }
    &[data-state="error"] {
        border-color: hsl(var(--color-red-200));
        h4 {
            .input-label-error();
        }
    }

    // Description and error text
    .form-field-description-error();

    [data-role="description"],
    [data-role="error"] {
        margin-top: @size015;
    }
}


.checkbox {
    // Grid nevar izmanto, jo tad label izstiepjas pa visu platumu
    // checkbox vēlams, lai label ir teksta platumā
    // un lai nenostrādā click ārpus label teksta
    display: flex;
    flex-flow: column nowrap;
    justify-content: flex-start;
    align-items: flex-start;
    gap: @size020;

    // Te ir label teksts un vizuālais checkbox
    label {
        display: inline-flex;
        flex-flow: row nowrap;
        align-items: center;
        gap: @size020;

        position: relative;

        cursor: pointer;
    }

    span {
        display: flex;
        justify-content: center;
        align-items: center;

        position: relative;

        width: @size040;
        height: @size040;

        // border elements. Lai var mainīt width un tas neiteikmē svg (checkmark) platumu
        &:before {
            content: '';
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;

            .border-sm();

            z-index: 1;
        }

        color: #fff;

        svg {
            opacity: 0;

            width: @size040;
            height: @size040;

            display: block;

            z-index: 2;
        }

        &:has(input:checked) {
            svg {
                opacity: 1;
            }
        }

        input {
            opacity: 0;
            position: absolute;
            top: 0;
            left: 0;
        }
    }
    &:not(:is([data-state="error"])) {
        label {
            .input-label();
        }
        span {
            &:before {
                border: 1px solid hsl(var(--color-900));
            }
            &:has(input:focus) {
                &:before {
                    border: 2px solid hsl(var(--color-900));
                }
            }

            &:has(input:checked) {
                &:before {
                    background-color: hsl(var(--color-900));
                }
            }
        }
    }
    &[data-state="error"] {
        label {
            .input-label-error();
        }
        span {
            &:before {
                border: 1px solid hsl(var(--color-error));
            }
            &:has(input:focus) {
                &:before {
                    border: 2px solid hsl(var(--color-error));
                }
            }
            &:has(input:checked) {
                &:before {
                    background-color: hsl(var(--color-error));
                }
            }
        }
    }

    // Description and error text
    .form-field-description-error();
}

.table {

    border: 1px solid hsl(var(--color-200));
    .border-md();
    .shadow();

    table {
        border-collapse: collapse;
        .w-full();
    }

    th, td {
        // šo vajag obligāti, pretējā gadījumā div un input elementi ir dažādās vietās viens top otrs bottom
        vertical-align: middle;
    }

    thead {
        tr {
            border-top: 1px solid hsl(var(--color-200));

            &:nth-child(1) {
                border-top: 0;
            }
        }

        th {
            >div {
                .t-3\.5();
                line-height: 1;

                display: flex;
                flex-direction: row;
                align-items: center;
                justify-content: flex-start;
                text-align: left;
                height: @size120;
                padding: @size020;

                >svg {
                    margin-right: @size015;
                    width: @size040;
                    height: @size040;
                }
            }

            color: hsl(var(--color-muted));

            // Tikai ikona, bez label
            &.icon {
                padding-left: @size020;
                padding-right: @size020;
                >svg {
                    margin-right: 0;
                }
            }
        }
    }

    tbody {
        tr {
            border-top: 1px solid hsl(var(--color-200));

            &:hover {
                background-color: hsl(var(--color-100)/.5);
            }
            &:has([data-table-checkrow] input:checked) {
                background-color: hsl(var(--color-200)/.5);
            }
        }
        td {
            >div {
                .t-3\.5();
                line-height: 1;

                display: flex;
                flex-direction: row;
                align-items: center;
                justify-content: flex-start;
                text-align: left;

                height: @size120;
                padding: @size020;

                // ir input lauks
                &:has(.form-field) {
                    padding-left: 0;
                    padding-right: 0;
                }

                // form field liekam aizņemt visu platumu
                >.form-field {
                    flex: 1;
                }
            }

            .toggle-switch {
                span:has(input:focus-visible) {
                    outline-color: hsl(var(--color-blue-400));
                }
            }

            .form-field {
                border: 2px solid transparent;
                .border-lg();

                &:has(input:focus),
                &:has(textarea:focus),
                &:has(select:focus) {
                    border-color: hsl(var(--color-blue-400));
                }

                >[type=text],
                >[type=email],
                >[type=password],
                >[type=date],
                >textarea,
                >.select-placeholder {
                    box-shadow: none;
                    border: 0;
                    padding-left: @size020;
                    padding-right: @size020;
                }
            }
        }
    }

    th, td {
        &:has([data-r="tableRowCheck"]) {
            width: @size100;
            >div {
                justify-content: center
            }
        }
        &:has([data-r="tableRowActions"]) {
            width: @size140;
            >div {
                justify-content: center
            }
        }
        &:has([data-r="tableRowDelete"]) {
            width: @size140;
            >div {
                justify-content: center
            }
        }

        // additional alignment
        &.h-left {
            >div {
                justify-content: flex-start;
                text-align: left;
            }
        }
        &.h-right {
            >div {
                justify-content: flex-end;
                text-align: right;
            }
        }
        &.h-center {
            >div {
                justify-content: center;
                text-align: center;
            }
        }

        &.v-top {
            >div {
                align-items: flex-start;
            }
        }
        &.v-bottom {
            >div {
                align-items: flex-end;
            }
        }
        &.v-center {
            >div {
                align-items: center;
            }
        }
    }
}

.menu-item {
    .remove-tap-highlite();

    .button-link-disabled-base-state();

    display: inline-flex;
    justify-content: flex-start;
    align-items: center;
    white-space: nowrap;
    &[hidden] {
        display: none;
    }

    .border-sm();

    .transition-color();

    cursor: pointer;

    &:is(a) {
        text-decoration: none;
    }
    color: hsl(var(--color-950));
    .t-3\.5();
    .fw-m();

    padding: @size015;

    &:active,
    &:focus,
    &:hover {
        background-color: hsl(var(--color-100));
    }
    &[data-checked] {
        background-color: hsl(var(--color-200));
    }

    svg {
        margin-right: @size015;
        width: @size040;
        height: @size040;
    }
    // Tikai ikona, bet label
    &.icon {
        svg {
            margin-right: 0;
        }
    }

    &.danger {
        color: hsl(var(--color-danger));
        &:hover {
            background-color: hsl(var(--color-red-50));
        }
    }
}

.dropdown-menu {

    position: relative;

    &[hidden] {
        display: none;
    }

    .border-md();
    border-width: 1px;
    border-style: solid;

    // krāsu uzliks ar css klasēm b-c-200, lai to var override

    background-color: hsl(var(--color-background));

    padding: @size005;

    .shadow-lg();

    display: grid;
    grid-auto-rows: min-content;

    min-width: @size320;

    >.delimiter-horizontal {
        margin-left: -@size005;
        margin-right: -@size005;
    }

    >.menu-content {
        padding: @size015;
    }

    // Visiem menu items tiek pieņemts, ka ir icon, ja nav, tad tiek atbrīvota vieta
    &.has-icons {
        >.menu-item {
            &:not(:has(svg)) {
                padding-left: @size015 + @size040 + @size015;
            }
        }
    }

    &[data-dropdown-menu-is-active] {
        //border-color: hsl(var(--color-red-400));
    }

    // Focus trap
    [data-dropdown-menu-focus-trap] {
        //border: 1px solid red;
        position: absolute;
        bottom: 0;
        opacity: 0;
        pointer-events: none;
        width: 1px;
        height: 1px;
        overflow: hidden;
    }
}

.nav-menu {
    display: flex;
    flex-flow: column nowrap;
    align-items: stretch;
    gap: @size005;

    &.vertical {
        flex-flow: row nowrap;
        align-items: center;
        justify-content: flex-start;
    }

    >.menu-item {
        white-space: nowrap;

        color: hsl(var(--color-900));

        padding-top: @size010;
        padding-bottom: @size010;

        &.selected {
            background-color: hsl(var(--color-200));
        }
    }
}

.options {

    /**
     * TODO šis jāņem ārā, pašlaik temp workaround
     */
    max-height: (8 * 2.05rem);

    display: flex;
    flex-flow: column nowrap;
    justify-content: flex-start;

    gap: 0;

    >.search-field {
        border-bottom: 1px solid hsl(var(--color-200));
    }

    // šeit ir options list
    >[role="list"] {
        .col-items();
        gap: 0;
        padding: @size005;
        overflow-y: auto;

        // Izplešas pa visu augstumu
        flex: 1;

        >.menu-item {

            .fw-r();

            &:active,
            &:focus,
            &:hover {
                background-color: hsl(var(--color-100));
            }
            &[data-checked] {
                background-color: hsl(var(--color-200));
            }

            &.hidden {
                display: none;
            }
            &:empty {
                &:before {
                    // invisible character, lai ieņem pareizo augstumu tukšs elements
                    content: '\00a0'
                }
            }
        }
    }
}

.tabs {
    >nav {
        display: flex;
        flex-flow: row nowrap;
        justify-content: space-evenly;
        gap: @size005;
        background-color: hsl(var(--color-100));

        .border-md();

        padding: var(--size-010);

        >.tab {
            .button-base();

            height: auto;
            flex: 1;

            padding-top: var(--size-010);
            padding-bottom: var(--size-010);

            color: hsl(var(--color-muted));

            .transition-color();

            &:hover {
                color: hsl(var(--color-600));
            }

            &[data-selected] {
                .shadow-lg();
                color: var(--color-950);
                background-color: hsl(var(--color-background));
                &:hover {
                    color: var(--color-950);
                    background-color: hsl(var(--color-background) / .7);
                }
            }
        }
    }


    >[data-role="tabs-contents"] {
        /**
         * default top margin uzliek no komponentes ar mt-3 css klasi
         * * to dara tāpēc, ja šeit sanāk pārāk specific un ar mt-{number}
         * * klasi to nevar pārrakstīt
         */
        //margin-top: var(--size-030);
    }
}

.tab-content {

    &:not([data-selected]) {
        display: none;
    }
}

.header {
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-between;
    align-items: center;
    gap: @size040;
}




.layout {
    /**
     * LAYOUT
     */
    // mob
    @media (max-width: 749px) {
    }
    // tablet
    @media (min-width: 750px) and (max-width: (@desktopWidth - 1px)) {
        display: block;
    }
    // desktop
    @media (min-width: @desktopWidth) {
        display: flex;
        flex-flow: row nowrap;

        position: relative;

        >aside {
            flex: 0 0 var(--layout-aside-width);
            height: 100dvh;
            max-height: 100dvh;

            overflow-x: hidden;
            overflow-y: auto;

            top: 0;
            position: sticky;

            display: flex;
            flex-flow: column nowrap;

            justify-content: space-between;
        }
        >section {
            flex: 1;
        }
    }



    /**
     * VISUAL
     */
    >aside {
        background-color: hsl(var(--color-50));
        border-right: 1px solid hsl(var(--color-200));
        padding-left: @size030;
        padding-right: @size030;
    }
    >section {
        // padding nelieka, to lai dara tas elements, kurš būs ielikts main content daļā
    }
}
.page {
    // desktop
    @media (min-width: @desktopWidth) {
        padding-left: @size060;
        padding-right: @size060;
        padding-top: @size040;

        // Padding bottom ir liels, lai elementi nav pie pašas ekrāna apakšas
        padding-bottom: @size960;
    }

    margin-left: auto;
    margin-right: auto;

    &.narrow {
        max-width: 28rem;
    }
    &.regular {
        max-width: 56rem;
    }
    &.centered {
        display: flex;
        flex-flow: column;
        align-items: center;
        justify-content: center;
        min-height: 100dvh;
    }

    &.center-content {
        display: flex;
        flex-flow: column nowrap;
        justify-content: center;
        align-items: center;
    }

    >.header {
        margin-bottom: @size120;
    }

    // Spacing starp direct elementiem
    >* {
        margin-top: @size100;
        &:first-child {
            margin-top: 0;
        }
    }
    &.center-content {
        >* {
            margin-top: 0;
        }
    }
}

.calendar {
    --text-color-date-default: var(--color-950);
    --text-color-date-secondary: var(--color-400);
    --border-radius-date: calc(var(--radius) - 2px);
    --border-today: 1px solid hsl(var(--color-400));
    --grid-gap: 2px;
    --border-width: 0px;

    --opacity-color-hover: 0.8;
    --bg-color-hover: var(--color-100);

    --opacity-color-selected: 0.8;
    --bg-color-selected: var(--color-950);

    --opacity-color-periodin: 0.8;
    --bg-color-periodin: var(--color-200);

    &.has-border {
        .border-md();
        border-width: 1px;
        border-style: solid;

        padding: @size015;

        background-color: hsl(var(--color-background));

        .shadow-lg();
    }
}
.wbcalendar-grid {
    gap: var(--grid-gap);

    .wbcalendar-slide & {
        border-left: var(--border-width) solid hsl(var(--color-300));
        border-top: var(--border-width) solid hsl(var(--color-300));
    }
}
.wbcalendar-switch {
    justify-content: flex-start;
    align-items: center
}
.wbcalendar-navprev,
.wbcalendar-navnext {
    .button-ghost();
    width: @size090;
    padding-left: @size020;
    padding-right: @size020;
    svg {
        margin-right: 0;
    }
}
.wbcalendar-navprev {
    order: 2;
}
.wbcalendar-navnext {
    order: 3;
}
.wbcalendar-datecaption {
    order: 1;
    flex: 1 1 100%;
}
.wbcalendar-datecaption {
    .t-3\.5();
    .month {
        .fw-b();
        margin-right: @size010;
    }
    .year {
        color: hsl(var(--color-500));
    }
}
.wbcalendar-weekday {
    .t-2\.5();
    .fw-m();
    color: hsl(var(--color-600));
    text-transform: uppercase;

    display: flex;
    justify-content: center;
    align-items: center;
}
.wbcalendar-date {

    border-radius: var(--border-radius-date);

    box-sizing: border-box;

    position: relative;

    .transition-color();

    // pašu date elementu izmantos, lai liktu custom bg krāsas

    // Šo  izmanto, lai uzliktu state background krāsu
    >span {
        box-sizing: border-box;

        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;

        display: flex;
        justify-content: center;
        align-items: center;

        /** 1. Date base formatting */
        border-radius: var(--border-radius-date);
        .t-3\.5();
        .fw-m();
        color: hsl(var(--text-color-date-default));

        cursor: pointer;

        .transition-color();

        background-blend-mode: multipy;

        &:hover {
            background-color: hsl(var(--bg-color-hover) / var(--opacity-color-hover));
        }
    }



    /** 2. Today */
    &.wbcalendar--today {
        >span {
            border: var(--border-today);
        }
    }


    /** 3. Prev next months */
    &.wbcalendar--prevmonth,
    &.wbcalendar--nextmonth {
        >span {
            color: hsl(var(--text-color-date-secondary));
        }
    }



    /** 4. Period */
    &.wbcalendar--period-in {
        border-radius: 0;

        >span {
            border-radius: 0;
            background-color: hsl(var(--bg-color-periodin) / var(--opacity-color-periodin));
            &:hover {
                background-color: hsl(var(--bg-color-periodin) / calc(var(--opacity-color-periodin) - .1));
            }
        }
    }
    &.wbcalendar--period-start,
    &.wbcalendar--period-end {
        .border-md();

        >span {
            .border-md();
            color: hsl(var(--color-100));
            background-color: hsl(var(--bg-color-selected) / var(--opacity-color-selected));
            &:hover {
                background-color: hsl(var(--bg-color-selected) / calc(var(--opacity-color-selected) - .1));
            }
        }
    }
    &.wbcalendar--period-start {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        >span {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }
    }
    &.wbcalendar--period-end {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
        >span {
            border-top-left-radius: 0;
                border-bottom-left-radius: 0;
        }
    }


    /** 5. User selected date */
    &.wbcalendar--selected {
        >span {
            color: hsl(var(--color-100));
            background-color: hsl(var(--bg-color-selected) / var(--opacity-color-selected));
            &:hover {
                background-color: hsl(var(--bg-color-selected) / calc(var(--opacity-color-selected) - .1));
            }
        }
    }


    /** 6. Disabled date */
    &.wbcalendar--date-disabled {
        >span {
            cursor: default;
            color: hsl(var(--text-color-date-secondary));
            // Noņemam hover krāsu
            &:hover {
                background-color: transparent;
            }
        }
    }
}
.calendar {
    &.size-8 {
        .wbcalendar {
            width: ~'calc('(@size080 * 7)~' + (var(--grid-gap)*6))';
        }
        .wbcalendar-weekday,
        .wbcalendar-date {
            width: @size080;
            height: @size080;
        }
    }
    &.size-12 {
        .wbcalendar {
            width: @size120 * 7;
        }
        .wbcalendar-weekday,
        .wbcalendar-date {
            width: @size120;
            height: @size120;
        }
    }
    &.size-16 {
        .wbcalendar {
            width: @size160 * 7;
        }
        .wbcalendar-weekday,
        .wbcalendar-date {
            width: @size160;
            height: @size160;
        }
    }
    &.size-20 {
        .wbcalendar {
            width: @size200 * 7;
        }
        .wbcalendar-weekday,
        .wbcalendar-date {
            width: @size200;
            height: @size200;
        }
    }
    &.size-24 {
        .wbcalendar {
            width: @size240 * 7;
        }
        .wbcalendar-weekday,
        .wbcalendar-date {
            width: @size240;
            height: @size240;
        }
    }
    &.size-28 {
        .wbcalendar {
            width: @size280 * 7;
        }
        .wbcalendar-weekday,
        .wbcalendar-date {
            width: @size280;
            height: @size280;
        }
    }
    &.size-32 {
        .wbcalendar {
            width: @size320 * 7;
        }
        .wbcalendar-weekday,
        .wbcalendar-date {
            width: @size320;
            height: @size320;
        }
    }
    &.size-36 {
        .wbcalendar {
            //width: ~'calc('(@size360 * 7)~' + var(--grid-gap)*6)';
            width: ~'calc('(@size360 * 7)~' + 7px)';
        }
        .wbcalendar-weekday,
        .wbcalendar-date {
            width: @size360;
        }
        .wbcalendar-weekday {
            height: @size120;
        }
        .wbcalendar-date {
            height: @size360;
        }
    }
}


/**
 * Absolūti pozicionēts conatiner elements, kurā ielikt
 * kādu citu elemntu, lai to varētu nopozicionēt pret
 * kādu citu ementu. Datepicker
 */
.overlay-container {
    z-index: 100;
    position: absolute;
    display: flex;
    flex-flow: row nowrap;
    justify-content: flex-start;
    align-items: flex-start;

    // top, left uzliks skripts
    // te vajag augšējā labajā stūrī nolikt, lai iekšējais content neuztaisa scrollbars
    top: 0;
    left: 0;

    // Lai ir līdz ekrāna malām
    right: 0;
    bottom: 0;

    // Overlay atslēdzam pointer events
    pointer-events: none;

    // Visiem childs ieslēdzam pointer events
    >* {
        pointer-events: all;
    }

    opacity: 1;

    // Visible slēdzam ar data atribūtu
    &[hidden] {
        // šie obligāti jāpieliek, jo var gadīties, ka
        // citā css hidden ir savādāks disaply un position
        position: absolute;
        display: flex;

        // Izslēdzam pointer event visiem childs
        >* {
            pointer-events: none;
        }

        opacity: 0;
    }
}

.pagination {
    .row-items();

    gap: 0;

    button,
    a {
        min-width: @size070;
    }

    [data-role=currentpage] {
        margin-left: 2px;
        margin-right: 2px;
    }

    // trīs punktu lapu aizvietotājs
    [data-role=placeholder] {
        padding-left: 0;
        padding-right: 0;
        min-width: @size050;
    }
}

.aspect-ratio-container {
    position: relative;
    >div {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

    &.image-contain,
    &.image-cover,
    &.image-fill {
        img {
            width: 100%;
            height: 100%;
        }
    }
    &.image-contain {
        img {
            object-fit: contain;
        }
    }
    &.image-cover {
        img {
            object-fit: cover;
        }
    }
    &.image-fill {
        img {
            object-fit: fill;
        }
    }
}

.file-picker {
    .shadow();

    .border-lg();
    border-width: 1px;
    border-style: solid;

    &:not(:has([data-state="error"])) {
        border-color: hsl(var(--color-200));
    }
    &[data-state="error"] {
        border-color: hsl(var(--color-red-200));
    }

    padding: @size050;

    position: relative;

    [type="file"] {
        position: absolute;
        display: block;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 0;
        cursor: pointer;
    }
}

.file-upload {
    [data-r="singleFileTemplate"] {
        display: none;
    }

    // Upload state, ja nav multiple, tad slēpjam file picker
    &.has-single-file[data-state="uploading"] {
        [data-r="file-picker"] {
            display: none;
        }
    }

    // Ja nav failu, tad nerādām files container el
    &:not(:has([data-r="files"] .file-upload-single-file)) {
        [data-r="files"] {
            display: none;
        }
    }



    &[data-emptystate] {
        .file-picker {
            border-style: dashed;
            text-align: center
        }
    }
}


.file-upload-single-file {
    .shadow();

    .border-lg();
    border-width: 1px;
    border-style: solid;
    border-color: hsl(var(--color-200));

    padding: @size050;
    padding-bottom: @size040;

    // Ja nav data-preview-image, tad slēpjam preview bloku
    &:not(:is([data-preview-image="ready"])) {
        >[data-r="preview"] {
            display: none;
        }
    }

    // Image preview
    >[data-r="preview"] {
        margin-bottom: @size040;
        ///.transition-color();
    }

    // Ikona, file name, upload progress, remove button
    >[data-r="controls"] {
        display: flex;
        flex-flow: row nowrap;
        align-items: flex-start;
        gap: 8px;

        >div {
            // Icon
            &:nth-child(1) {
                svg {
                    width: @size090;
                    height: @size090;
                }
            }
            // Vidējā daļa. File name, progress bar
            &:nth-child(2) {
                flex: 1;

                position: relative;
            }
        }
    }

    /**
     * File type icons
     */
    svg[data-type="document"],
    svg[data-type="image"],
    svg[data-type="video"],
    svg[data-type="audio"],
    svg[data-type="archive"] {
        display: none;
        color: hsl(var(--color-600))
    }

    // File type ikonas pēc noklusējuma hidden
    // pēc data-file-type atribūta rādām ikonu
    &[data-file-type="document"] svg[data-type="document"] {
        display: inline;
    }
    &[data-file-type="image"] svg[data-type="image"] {
        display: inline;
    }
    &[data-file-type="video"] svg[data-type="video"] {
        display: inline;
    }
    &[data-file-type="audio"] svg[data-type="audio"] {
        display: inline;
    }
    &[data-file-type="archive"] svg[data-type="archive"] {
        display: inline;
    }


    // Ja ir preview image, tad ikonu nerādām
    // tikai, ja fails tiešām ir image. Js uzstāda ready
    &[data-preview-image="ready"] {
        [data-r="controls"] {
            >.icon {
                display: none;
            }
        }
    }



    /**
     * Failed message
     */
    .failed-message {
        .t-3\.5();
        margin-top: @size005;
        color: hsl(var(--color-red-500));
    }


    /**
     * States
     */
    &[data-state=ready] {
        [data-r=failedMessage],
        [data-r=progressBar] {
            display: none;
        }
        [data-r="preview"] {
            opacity: 0.4;
        }
    }
    &[data-state=uploading] {
        [data-r=failedMessage] {
            display: none;
        }
        [data-r="preview"] {
            opacity: 0.4;
        }
    }
    &[data-state=failed] {
        [data-r=progressBar] {
            display: none;
        }
        [data-r="preview"] {
            opacity: 0.4;
        }
    }
    &[data-state=completed] {
        [data-r=failedMessage] {
            display: none;
        }
        [data-r="preview"] {
            opacity: 1;
        }
    }
    // Esošs fails
    &[data-state=existing] {
        [data-r=failedMessage],
        [data-r=progressBar] {
            display: none;
        }
        [data-r="preview"] {
            opacity: 1;
        }
    }

    // Download poga
    &:not(:is([data-downloadable])) {
        [data-r="button-download"] {
            display: none;
        }
    }

    // Remove poga
    &:not(:is([data-removable])) {
        [data-r="button-remove"] {
            display: none;
        }
    }
}

.progress-bar {
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    gap: 8px;

    // Indicator
    >div:nth-child(1) {
        flex: 1;

        height: 5px;
        overflow: hidden;
        border-radius: var(--radius);
        background-color: hsl(var(--color-200));
        span {
            display: block;
            background-color: hsl(var(--color-blue-500));
            border-radius: var(--radius);
            height: 100%;
        }
    }
    // Precentage labal
    >div:nth-child(2) {
        .t-3();
        width: @size090;
    }
}

/**
 * Radio buttons are only buttons. Without label, description and error state
 */
.radio-buttons {
    // Buttons container, ja tajā nav h-stack vai v-stack
    // tad taisām flex row
    &:not(:has(.row-items)):not(:has(.col-items)) {
        display: flex;
        flex-flow: row nowrap;
        justify-content: space-evenly;

        gap: @size020;

        >* {
            flex: 1;
        }
    }

    [data-role="radio-button"] {
        cursor: pointer;
        position: relative;

        input {
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0;
        }
    }
}

.field-radio-buttons {
    display: grid;
    grid-auto-rows: min-content;
    gap: @size020;

    // Buttons container
    >.radio-buttons {
        .shadow();
        .border-lg();
        border-width: 1px;
        border-style: solid;
        border-color: hsl(var(--color-200));
        padding: var(--size-010);
    }

    &:not(:is([data-state="error"])) {
        >label {
            .input-label();
        }
        >.radio-buttons {
            border-color: hsl(var(--color-200));
        }
    }
    &[data-state="error"] {
        >label {
            .input-label-error();
        }
        >.radio-buttons {
            border-color: hsl(var(--color-red-200));
        }
    }

    // Description and error text
    .form-field-description-error()
}

.avatar {
    display: flex;
    flex-flow: row nowrap;
    gap: @size020;

    &.border {
        .border-lg();
        border-width: 1px;
        border-style: solid;
        border-color: hsl(var(--color-200));
        .shadow();

        padding: @size060;

        &.compact {
            padding: @size040;
        }
    }

    .avatar-image {
        // Default image izmērs
        flex: 0 0 @size080;
        width: @size080;

        [data-role="image-wrap"] {
            overflow: hidden;
            border-radius: 50%;

            background-color: hsl(var(--color-200));

            img {
                object-fit: fill;
                width: 100%;
                height: auto;
            }
        }
    }
    // ja ir image, tad noņemam background
    &[data-image] {
        .avatar-image {
            [data-role="image-wrap"] {
                background-color: transparent;
            }
        }
    }

    @import './avatar-image-sizes';

    .avatar-content {
        flex: 1; // visa brīvā vieta
        display: flex;
        flex-flow: column nowrap;
        justify-content: center;
    }
    &.v-top {
        .avatar-content {
            justify-content: flex-start;
        }
    }
    &.v-bottom {
        .avatar-content {
            justify-content: flex-end;
        }
    }
    &.v-center {
        .avatar-content {
            justify-content: center;
        }
    }

    .avatar-actions {
        display: flex;
        flex-flow: column nowrap;
        justify-content: flex-start;
    }
}

.grid {

    .gaps-sizes();

    display: grid;
	grid-auto-flow: column;
	grid-gap: 1px;
	grid-template-columns: repeat(3, 1fr);
	grid-template-rows: repeat(8, auto);

    &.rows-1 {
        grid-template-rows: repeat(1, auto);
    }
    &.rows-2 {
        grid-template-rows: repeat(2, auto);
    }
    &.rows-3 {
        grid-template-rows: repeat(3, auto);
    }
    &.rows-4 {
        grid-template-rows: repeat(4, auto);
    }
    &.rows-5 {
        grid-template-rows: repeat(5, auto);
    }
    &.rows-6 {
        grid-template-rows: repeat(6, auto);
    }
    &.rows-7 {
        grid-template-rows: repeat(7, auto);
    }
    &.rows-8 {
        grid-template-rows: repeat(8, auto);
    }
}